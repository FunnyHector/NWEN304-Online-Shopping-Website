Service: '/manage/vinyls'
Method: GET
Description: Gets a list of all the vinyls in the database.
Success: Renders a list of all the vinyls onto the manage vinyls page.
Fail:
Error will be rendered when there is:
- Database error
- User is not an admin

EXAMPLE => curl -X GET https://vinylholics.herokuapp.com/manage/vinyls

----------------------------------------------------------------------------------------------
Service: '/manage/vinyl/:id'
Method: GET
Parameters:
- id: vinyl ID
Description: Gets information of a vinyl that matches the ID provided.
Success: Gets information of a vinyl then renders it into a form on the manage vinyl page.
Fail:
Error will be rendered when there is:
- Database error
- User is not an admin

EXAMPLE => curl -X GET https://vinylholics.herokuapp.com/manage/vinyl/1

----------------------------------------------------------------------------------------------
Service: '/manage/vinyl/:id'
Method: POST
Parameters:
- id: vinyl ID
Body:
- Title
- Artist name
- Valid album release date
- Valid price
Description: Updates the information of a vinyl that matches the ID provided.
Success: Information will be updated for an album that matches the ID provided and a success message will be rendered onto the manage vinyl page.
Fail: 
Error will be rendered when there is:
- Database error
- ID is invalid
- Information provided is invalid
- User is not an admin

EXAMPLE => 
curl -X POST \
  https://vinylholics.herokuapp.com/manage/vinyl/11 \
  -H 'content-type: multipart/form-data' \
  -F 'title=Testing Title' \
  -F artist=1 \
  -F 'description=This is a test edit' \
  -F is_compilation= \
  -F released_on=2017-05-28 \
  -F genre=Rock \
  -F price=25

----------------------------------------------------------------------------------------------
Service: '/manage/artists'
Method: GET
Description: Gets a list of all the artists in the database.
Success: Gets a list of artist and displays them on the manage artists page.
Fail: 
Error will be rendered when there is:
- Database error
- User is not an admin

EXAMPLE => curl -X GET https://vinylholics.herokuapp.com/manage/artists

----------------------------------------------------------------------------------------------
Service: '/manage/artist/:id'
Method: GET
Parameters:
- id: artist ID
Description: Gets information of an artist that matches the ID provided.
Success: Gets information of an artist then renders it into a form on the manage artist page.
Fail:
Error will be rendered when there is:
- Database error
- User is not an admin

EXAMPLE => curl -X GET https://vinylholics.herokuapp.com/manage/artist/7

----------------------------------------------------------------------------------------------
Service: '/manage/artist/:id'
Method: POST
Parameters:
- id: vinyl ID
Body:
- Artist name
Description: Updates the information of an artist that matches the ID provided.
Success: Information will be updated for an artist that matches the ID provided and a success message will be rendered onto the manage artist page.
Fail: 
Error will be rendered when there is:
- Database error
- ID is invalid
- Information provided is invalid
- User is not an admin

EXAMPLE => 
curl -X POST \
  https://vinylholics.herokuapp.com/manage/artist/7 \
  -H 'content-type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW' \
  -F 'artist_name=Test Artist' \
  -F 'description=This is just a test artist'

----------------------------------------------------------------------------------------------
Service: '/manage/orders'
Method: GET
Description: Gets a list of all the orders in the database.
Success: Gets all the orders and renders them on the manage order history page.
Fail:
Error will be rendered when there is:
- Database error
- User is not an admin

EXAMPLE => curl -X GET https://vinylholics.herokuapp.com/manage/orders

----------------------------------------------------------------------------------------------
Service: '/manage/order/:id'
Method: GET
Parameters:
- id: order ID
Description: Gets information of an order that matches the ID provided.
Success: Gets information of an order then renders it into a form on the manage order page.
Fail:
Error will be rendered when there is:
- Database error
- User is not an admin

EXAMPLE => curl -X GET https://vinylholics.herokuapp.com/manage/order/21

----------------------------------------------------------------------------------------------
Service: '/manage/remove/item/:id'
Method: DELETE
Parameters:
- id: order ID
Description: Removes a vinyl from a order.
Success: Removes a vinyl that matches the id provided from a order.
Fail:
Error will be rendered when there is:
- Database error
- ID is invalid
- User is not an admin

EXAMPLE => curl -X GET https://vinylholics.herokuapp.com/manage/remove/item/78










